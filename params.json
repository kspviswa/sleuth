{"name":"Sleuth","tagline":"Binary instrumentation / profiler / debugger on a scripting framework.","body":"sleuth\r\n======\r\n\r\nCode names as S-PIN (Scripted PIN ) is an instrumentation / debugger tool, created on top of Intel's Pin. \r\nSlueth exposes a scripting framework on top of PIN's API, so that developers / sluethers can exploit the rich PIN APIs in a programmable perspective. It is aimed to provide rich scripting features like dtrace of solaris / unix.\r\n\r\nPin\r\n====\r\n\r\nPin is a dynamic binary instrumentation framework for the IA-32 and x86-64 instruction-set architectures that enables the creation of dynamic program analysis tools. \r\n\r\nFor more info, visit. https://software.intel.com/en-us/articles/pin-a-dynamic-binary-instrumentation-tool \r\n\r\n\r\nUsage Terms\r\n==========\r\n\r\nThis program will be distributed under MIT License. However, Pin comes with INTEL's pre-release license agreement. So please refer to [this license] (https://software.intel.com/sites/landingpage/pintool/LICENSE), if you are planning to extend / redistribute sleuth and / or Pin. \r\n\r\nFor more FAQs on Pin refer [here] (https://software.intel.com/en-us/articles/pintool-faq)\r\n\r\nWhile you are free to modify / redistribute sleuth under MIT license, you are requested to retain the original author information (Myself for sleuth and Intel for Pin) while redistributing. \r\n\r\nIf anybody wants to join the sleuth program / wishes to donate to keep this program active, they are requested to contact me @ coolviswa86@gmail.com\r\n\r\nwww.kspviswa.wordpress.com\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}